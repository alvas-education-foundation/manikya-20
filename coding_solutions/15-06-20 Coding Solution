C++ program to calculate the sum of all palindromic numbers in a linked list 
  
#include <bits/stdc++.h> 
using namespace std; 
  
// Node of the singly 
// linked list 
struct Node { 
    int data; 
    Node* next; 
}; 
  
// Function to insert a node at 
// the beginning of the singly 
// Linked List 
void push(Node** head_ref, int new_data) 
{ 
    // allocate node 
    Node* new_node = (Node*)malloc( 
        sizeof(struct Node)); 
  
    // Insert the data 
    new_node->data = new_data; 
  
    // Point the new Node 
    // to the current head 
    new_node->next = (*head_ref); 
  
    // Make the new Node as 
    // the new head 
    (*head_ref) = new_node; 
} 
  
// Function to check 
// if a number n is 
// palindrome or not 
bool isPalin(int n) 
{ 
    int d = 0, s = 0; 
    int temp = n; 
    while (n > 0) { 
        d = n % 10; 
        s = s * 10 + d; 
        n = n / 10; 
    } 
  
    // If n is equal to 
    // the its reverse 
    // it is a palindrome 
    return temp == s; 
} 
  
// Function to calculate 
// the sum of all nodes 
// which are palindrome 
int sumOfpal(Node* head_1) 
{ 
    int s = 0; 
    Node* ptr = head_1; 
    while (ptr != NULL) { 
  
        // If the value of the 
        // current node is 
        // a palindrome 
        if (isPalin(ptr->data)) { 
  
            // Add the value 
            // to the sum 
            s += ptr->data; 
        } 
        ptr = ptr->next; 
    } 
    return s; 
} 
  
// Driver Code 
int main() 
{ 
    // Create the head 
    // of the linked list 
    Node* head1 = NULL; 
  
    // Insert nodes into 
    // the linked list 
    push(&head1, 13); 
    push(&head1, 212); 
    push(&head1, 22); 
    push(&head1, 44); 
    push(&head1, 4); 
    push(&head1, 3); 
  
    // Print the sum of all 
    // palindromes 
    cout << sumOfpal(head1) 
         << endl; 
    return 0; 
} 
